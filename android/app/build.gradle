plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def dataCompileSdkVersion = localProperties.getProperty('flutter.compileSdkVersion')
if (dataCompileSdkVersion == null) {
    dataCompileSdkVersion = '34'
}

def dataMinSdkVersion = localProperties.getProperty('flutter.minSdkVersion')
if (dataMinSdkVersion == null) {
    dataMinSdkVersion = '19'
}

def dataTargetSdkVersion = localProperties.getProperty('flutter.targetSdkVersion')
if (dataTargetSdkVersion == null) {
    dataTargetSdkVersion = '34'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
		keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion dataCompileSdkVersion.toInteger()
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.gafum.just_put"
        minSdkVersion dataMinSdkVersion.toInteger()
        targetSdkVersion dataTargetSdkVersion.toInteger()
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
				multiDexEnabled true
    }

		signingConfigs {
				release {
						keyAlias keystoreProperties['keyAlias']
						keyPassword keystoreProperties['keyPassword']
						storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
						storePassword keystoreProperties['storePassword']
				}
    }

    buildTypes {
        release {
						signingConfig signingConfigs.release
        }
		}
}

flutter {
    source '../..'
}

dependencies {
    
}
